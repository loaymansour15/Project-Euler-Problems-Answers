//
//  main.cpp
//  Study
//
//  Created by Loay on 7/17/18.
//  Copyright Â© 2018 Loay Productions. All rights reserved.
//

#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Solved using dynaimc programming method
// can be solved by Multiplicative Formula or Binomial Coefficient.

long long LatticePaths(long long **grid, int n){
    
    for(int i = 0; i < n+1; i++){
        grid[i][n] = 1;
        grid[n][i] = 1;
    }
    
    for(int i = n-1; i >= 0; i--){
        for(int j = n-1; j >= 0; j--){
            grid[i][j] = grid[i][j+1] + grid[i+1][j];
        }
    }
    
    return grid[0][0];
}

int main(int argc, const char * argv[]) {
    
    int n = 20;
    long long **grid = new long long*[n+1];
    for (int i = 0; i < n+1; i++)
        grid[i] = new long long[n+1];
    
    auto sol = LatticePaths(grid, n);
    cout << sol <<endl;
    return 0;
}
